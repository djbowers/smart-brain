{"version":3,"sources":["config.js","components/Logo/brain.png","serviceWorker.js","components/FaceRecognition/FaceRecognition.js","components/ImageLinkForm/ImageLinkForm.js","components/Logo/Logo.js","components/Navigation/Navigation.js","components/Rank/Rank.js","components/Register/Register.js","components/Signin/Signin.js","containers/App/App.js","index.js"],"names":["module","exports","BACKEND_URL","process","Boolean","window","location","hostname","match","FaceRecognition","imageUrl","box","className","id","alt","src","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onImageSubmit","type","onChange","onClick","Logo","options","max","paddingTop","brain","Navigation","onRouteChange","isSignedIn","display","justifyContent","Rank","name","entries","Register","props","onNameChange","event","setState","target","value","onEmailChange","email","onPasswordChange","password","onSubmitRegistration","fetch","URL","method","headers","body","JSON","stringify","state","then","response","json","user","loadUser","htmlFor","this","Component","Signin","signInEmail","signInPassword","onSubmitSignIn","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gGAEAA,EAAOC,QAAU,CAAEC,YAFCC,sD,wBCApBH,EAAOC,QAAU,IAA0B,mC,2KCYvBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4ECWSC,G,MAzBS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,gBACb,yBACEC,GAAG,aACHC,IAAI,GACJC,IAAKL,EACLM,MAAM,QACNC,OAAO,SAET,yBACEL,UAAU,eACVM,MAAO,CACLC,IAAKR,EAAIS,OACTC,MAAOV,EAAIW,SACXC,OAAQZ,EAAIa,UACZC,KAAMd,EAAIe,eCMPC,G,MAvBO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACtC,OACE,6BACE,uBAAGjB,UAAU,MACV,uEAEH,yBAAKA,UAAU,gCACb,2BACEA,UAAU,qBACVkB,KAAK,OACLC,SAAUH,IAEZ,4BACEhB,UAAU,sDACVoB,QAASH,GAFX,c,iCCKOI,G,MAhBF,WACX,OACE,yBAAKrB,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,oBACVsB,QAAS,CAAEC,IAAK,IAChBjB,MAAO,CAAED,OAAQ,IAAKD,MAAO,MAE7B,yBAAKJ,UAAU,kBACb,yBAAKM,MAAO,CAAEkB,WAAY,OAAStB,IAAI,OAAOC,IAAKsB,WCoB9CC,EAhCI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cACpB,OADoD,EAAjBC,WAG/B,yBAAKtB,MAAO,CAAEuB,QAAS,OAAQC,eAAgB,aAC7C,uBACEV,QAAS,kBAAMO,EAAc,YAC7B3B,UAAU,2CAFZ,aAUF,yBAAKM,MAAO,CAAEuB,QAAS,OAAQC,eAAgB,aAC7C,uBACEV,QAAS,kBAAMO,EAAc,WAC7B3B,UAAU,2CAFZ,WAMA,uBACEoB,QAAS,kBAAMO,EAAc,aAC7B3B,UAAU,2CAFZ,c,iBCVO+B,EAXF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACE,6BACE,yBAAKjC,UAAU,YAAf,UACMgC,EADN,qCAGA,yBAAKhC,UAAU,YAAYiC,KCgGlBC,E,YAnGb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAQRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEN,KAAMK,EAAME,OAAOC,SAVlB,EAanBC,cAAgB,SAACJ,GACf,EAAKC,SAAS,CAAEI,MAAOL,EAAME,OAAOC,SAdnB,EAiBnBG,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CAAEM,SAAUP,EAAME,OAAOC,SAlBtB,EAqBnBK,qBAAuB,WACrBC,MAAM,IAAIC,IAAI,YAAazD,eAAc,CACvC0D,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBpB,KAAM,EAAKqB,MAAMrB,KACjBU,MAAO,EAAKW,MAAMX,MAClBE,SAAU,EAAKS,MAAMT,aAGtBU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKxD,KACP,EAAKkC,MAAMuB,SAASD,GACpB,EAAKtB,MAAMR,cAAc,aAjC/B,EAAK0B,MAAQ,CACXrB,KAAM,GACNU,MAAO,GACPE,SAAU,IALK,E,sEAyCjB,OACE,6BAAS5C,UAAU,kEACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUC,GAAG,UAAUD,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoB2D,QAAQ,QAA7C,QAGA,2BACE3D,UAAU,qEACVmB,SAAUyC,KAAKxB,aACflB,KAAK,OACLc,KAAK,OACL/B,GAAG,UAGP,yBAAKD,UAAU,OACb,2BAAOA,UAAU,oBAAoB2D,QAAQ,iBAA7C,SAGA,2BACE3D,UAAU,qEACVmB,SAAUyC,KAAKnB,cACfvB,KAAK,QACLc,KAAK,gBACL/B,GAAG,mBAGP,yBAAKD,UAAU,OACb,2BAAOA,UAAU,oBAAoB2D,QAAQ,YAA7C,YAGA,2BACE3D,UAAU,uEACVmB,SAAUyC,KAAKjB,iBACfzB,KAAK,WACLc,KAAK,WACL/B,GAAG,eAIT,yBAAKD,UAAU,IACb,2BACEA,UAAU,uEACVoB,QAASwC,KAAKf,qBACd3B,KAAK,SACLsB,MAAM,qB,GA1FCqB,aC2FRC,E,YA1Fb,WAAY3B,GAAQ,IAAD,8BACjB,4CAAMA,KAORM,cAAgB,SAACJ,GACf,EAAKC,SAAS,CAAEyB,YAAa1B,EAAME,OAAOC,SATzB,EAYnBG,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CAAE0B,eAAgB3B,EAAME,OAAOC,SAb5B,EAgBnByB,eAAiB,WACfnB,MAAM,IAAIC,IAAI,UAAWzD,eAAc,CACrC0D,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBV,MAAO,EAAKW,MAAMU,YAClBnB,SAAU,EAAKS,MAAMW,mBAGtBV,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKxD,KACP,EAAKkC,MAAMuB,SAASD,GACpB,EAAKtB,MAAMR,cAAc,aA3B/B,EAAK0B,MAAQ,CACXU,YAAa,GACbC,eAAgB,IAJD,E,sEAkCT,IACArC,EAAkBiC,KAAKzB,MAAvBR,cACR,OACE,6BAAS3B,UAAU,kEACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUC,GAAG,UAAUD,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoB2D,QAAQ,iBAA7C,SAGA,2BACE3D,UAAU,qEACVmB,SAAUyC,KAAKnB,cACfvB,KAAK,QACLc,KAAK,gBACL/B,GAAG,mBAGP,yBAAKD,UAAU,OACb,2BAAOA,UAAU,oBAAoB2D,QAAQ,YAA7C,YAGA,2BACE3D,UAAU,uEACVmB,SAAUyC,KAAKjB,iBACfzB,KAAK,WACLc,KAAK,WACL/B,GAAG,eAIT,yBAAKD,UAAU,IACb,2BACEA,UAAU,uEACVoB,QAASwC,KAAKK,eACd/C,KAAK,SACLsB,MAAM,aAGV,yBAAKxC,UAAU,eACb,uBACEoB,QAAS,kBAAMO,EAAc,aAC7B3B,UAAU,gCAFZ,oB,GA7EO6D,aCWfK,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACN5B,MAAO,GACP6B,QAAS,CACPC,QAAQ,EACRC,WAAY,QAMdC,EAAe,CACnBC,MAAO,GACP3E,SAAU,GACVC,IAAK,GACL2E,MAAO,SACP9C,YAAY,EACZ6B,KAAM,CACJxD,GAAI,GACJ+B,KAAM,GACNU,MAAO,GACPE,SAAU,GACVX,QAAS,EACT0C,OAAQ,KAsHGC,E,YAjHb,aAAe,IAAD,8BACZ,+CAIFlB,SAAW,SAACD,GACV,EAAKnB,SAAS,CACZmB,KAAM,CACJxD,GAAIwD,EAAKxD,GACT+B,KAAMyB,EAAKzB,KACXU,MAAOe,EAAKf,MACZE,SAAUa,EAAKb,SACfX,QAASwB,EAAKxB,QACd0C,OAAQlB,EAAKkB,WAbL,EAkBdE,sBAAwB,SAACC,GACvB,IAAMC,EACJD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aACxCC,EAAQC,SAASC,eAAe,cAChClF,EAAQmF,OAAOH,EAAMhF,OACrBC,EAASkF,OAAOH,EAAM/E,QAC5B,MAAO,CACLS,QAASiE,EAAaS,SAAWpF,EACjCI,OAAQuE,EAAaU,QAAUpF,EAC/BK,SAAUN,EAAQ2E,EAAaW,UAAYtF,EAC3CQ,UAAWP,EAAS0E,EAAaY,WAAatF,IA5BpC,EAgCduF,eAAiB,SAAC7F,GAChB,EAAKuC,SAAS,CAAEvC,IAAKA,KAjCT,EAoCdiB,cAAgB,SAACqB,GACf,EAAKC,SAAS,CAAEmC,MAAOpC,EAAME,OAAOC,SArCxB,EAwCdvB,cAAgB,WAAO,IAAD,EACI,EAAKoC,MAArBI,EADY,EACZA,KACF3D,EAFc,EACN2E,MAId,EAAKnC,SAAS,CAAExC,aAChBgD,MAAM,IAAIC,IAAI,YAAazD,eAAc,CACvC0D,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEtD,eAEtBwD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,GACFT,MAAM,IAAIC,IAAI,SAAUzD,eAAc,CACpC0D,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBnD,GAAIwD,EAAKxD,OAGVqD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACuC,GACL,EAAKvD,SAASwD,OAAOC,OAAOtC,EAAM,CAAExB,QAAS4D,QAE9CG,MAAMC,QAAQC,KAEnB,EAAKN,eAAe,EAAKf,sBAAsBtB,OAEhDyC,OAAM,SAACG,GAAD,OAASF,QAAQC,IAAIC,OArElB,EAwEdxE,cAAgB,SAAC+C,GACD,YAAVA,EACF,EAAKpC,SAASkC,GACK,SAAVE,GACT,EAAKpC,SAAS,CAAEV,YAAY,IAE9B,EAAKU,SAAS,CAAEoC,MAAOA,KA5EvB,EAAKrB,MAAQmB,EAFD,E,sEAiFJ,IAAD,EAC4CZ,KAAKP,MAAhDzB,EADD,EACCA,WAAY9B,EADb,EACaA,SAAU4E,EADvB,EACuBA,MAAO3E,EAD9B,EAC8BA,IAAK0D,EADnC,EACmCA,KAC1C,OACE,yBAAKzD,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YAAYoG,OAAQlC,IACzC,kBAAC,EAAD,CACEvC,cAAeiC,KAAKjC,cACpBC,WAAYA,IAEH,SAAV8C,EACC,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAM1C,KAAMyB,EAAKzB,KAAMC,QAASwB,EAAKxB,UACrC,kBAAC,EAAD,CACEjB,cAAe4C,KAAK5C,cACpBC,cAAe2C,KAAK3C,gBAEtB,kBAAC,EAAD,CAAiBlB,IAAKA,EAAKD,SAAUA,KAE3B,WAAV4E,EACF,kBAAC,EAAD,CAAQ/C,cAAeiC,KAAKjC,cAAe+B,SAAUE,KAAKF,WAE1D,kBAAC,EAAD,CACE/B,cAAeiC,KAAKjC,cACpB+B,SAAUE,KAAKF,gB,GA1GTG,a,cCnClBwC,EAASC,OAAO,kBAAC,EAAD,MAASjB,SAASC,eAAe,STyH3C,kBAAmBiB,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAACoD,GAClCA,EAAaC,kB","file":"static/js/main.8869ac67.chunk.js","sourcesContent":["const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nmodule.exports = { BACKEND_URL };\n","module.exports = __webpack_public_path__ + \"static/media/brain.31fa4ff8.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './FaceRecognition.css';\n\nimport React from 'react';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputimage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import './ImageLinkForm.css';\n\nimport React from 'react';\n\nconst ImageLinkForm = ({ onInputChange, onImageSubmit }) => {\n  return (\n    <div>\n      <p className=\"f3\">\n        {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n      </p>\n      <div className=\"center pa4 br3 shadow-5 form\">\n        <input\n          className=\"f4 pa2 w-70 center\"\n          type=\"text\"\n          onChange={onInputChange}\n        />\n        <button\n          className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n          onClick={onImageSubmit}\n        >\n          Detect\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0 tc\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 55 }}\n        style={{ height: 250, width: 250 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img style={{ paddingTop: '5px' }} alt=\"logo\" src={brain} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signout')}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signin')}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange('register')}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className=\"white f3\">\n        {`${name}, your current entry count is...`}\n      </div>\n      <div className=\"white f1\">{entries}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React, { Component } from 'react';\n\nimport { BACKEND_URL } from '../../config';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitRegistration = () => {\n    fetch(new URL('/register', BACKEND_URL), {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  onChange={this.onNameChange}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  onChange={this.onEmailChange}\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  onChange={this.onPasswordChange}\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                onClick={this.onSubmitRegistration}\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\n\nimport { BACKEND_URL } from '../../config';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    fetch(new URL('/signin', BACKEND_URL), {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  onChange={this.onEmailChange}\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  onChange={this.onPasswordChange}\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                onClick={this.onSubmitSignIn}\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange('register')}\n                className=\"f6 link dim black db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;\n","import './App.css';\nimport 'tachyons';\n\nimport React, { Component } from 'react';\n\nimport { BACKEND_URL } from '../../config';\nimport FaceRecognition from '../../components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from '../../components/ImageLinkForm/ImageLinkForm';\nimport Logo from '../../components/Logo/Logo';\nimport Navigation from '../../components/Navigation/Navigation';\nimport Particles from 'react-particles-js';\nimport Rank from '../../components/Rank/Rank';\nimport Register from '../../components/Register/Register';\nimport Signin from '../../components/Signin/Signin';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 500\n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (user) => {\n    this.setState({\n      user: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        password: user.password,\n        entries: user.entries,\n        joined: user.joined\n      }\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onImageSubmit = () => {\n    const { user, input } = this.state;\n    const imageUrl = input;\n    // TODO add input validation for imageUrl\n\n    this.setState({ imageUrl });\n    fetch(new URL('/imageurl', BACKEND_URL), {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ imageUrl })\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(new URL('/image', BACKEND_URL), {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: user.id\n            })\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"Particles\" params={particlesOptions} />\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n        {route === 'home' ? (\n          <div>\n            <Logo />\n            <Rank name={user.name} entries={user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onImageSubmit={this.onImageSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === 'signin' ? (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        ) : (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './containers/App/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}